---
const { name, url, icon } = Astro.props;
---

<a
  href={url}
  class="group bg-gradient-to-br from-blue-500 to-blue-700 rounded-xl shadow-lg hover:shadow-2xl transition-all duration-500 p-6 text-white relative overflow-hidden transform hover:scale-105"
>
  <!-- Animated Background -->
  <div class="absolute inset-0 bg-gradient-to-r from-blue-400 to-blue-600 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
  
  <!-- Content -->
  <div class="relative z-10 flex items-center space-x-4">
    <span class="text-3xl group-hover:scale-110 group-hover:rotate-12 transition-transform duration-500">
      {icon}
    </span>
    <div class="flex-1">
      <span class="font-medium group-hover:text-blue-100 transition-colors">
        {name}
      </span>
    </div>
    <svg
      class="w-6 h-6 text-blue-100 transform group-hover:translate-x-2 transition-transform duration-300"
      fill="none"
      viewBox="0 0 24 24"
      stroke="currentColor"
    >
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
    </svg>
  </div>

  <!-- Particle Effects -->
  <div class="particle"></div>
  <div class="particle"></div>
</a>

<style>
  .particle {
    @apply absolute rounded-full bg-blue-200 opacity-20;
    width: 20px;
    height: 20px;
    animation: float 6s infinite;
  }

  .particle:nth-child(1) {
    top: -10px;
    right: 10%;
    animation-delay: -2s;
  }

  .particle:nth-child(2) {
    bottom: -10px;
    left: 10%;
    animation-delay: -1s;
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0) rotate(0deg);
    }
    50% {
      transform: translateY(-20px) rotate(180deg);
    }
  }
</style>